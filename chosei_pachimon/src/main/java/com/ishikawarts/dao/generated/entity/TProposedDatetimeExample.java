package com.ishikawarts.dao.generated.entity;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TProposedDatetimeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public TProposedDatetimeExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEventIdIsNull() {
            addCriterion("EVENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNotNull() {
            addCriterion("EVENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEventIdEqualTo(String value) {
            addCriterion("EVENT_ID =", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotEqualTo(String value) {
            addCriterion("EVENT_ID <>", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThan(String value) {
            addCriterion("EVENT_ID >", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThanOrEqualTo(String value) {
            addCriterion("EVENT_ID >=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThan(String value) {
            addCriterion("EVENT_ID <", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThanOrEqualTo(String value) {
            addCriterion("EVENT_ID <=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLike(String value) {
            addCriterion("EVENT_ID like", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotLike(String value) {
            addCriterion("EVENT_ID not like", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdIn(List<String> values) {
            addCriterion("EVENT_ID in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotIn(List<String> values) {
            addCriterion("EVENT_ID not in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdBetween(String value1, String value2) {
            addCriterion("EVENT_ID between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotBetween(String value1, String value2) {
            addCriterion("EVENT_ID not between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeIsNull() {
            addCriterion("PROPOSED_DATETIME is null");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeIsNotNull() {
            addCriterion("PROPOSED_DATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeEqualTo(String value) {
            addCriterion("PROPOSED_DATETIME =", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeNotEqualTo(String value) {
            addCriterion("PROPOSED_DATETIME <>", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeGreaterThan(String value) {
            addCriterion("PROPOSED_DATETIME >", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeGreaterThanOrEqualTo(String value) {
            addCriterion("PROPOSED_DATETIME >=", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeLessThan(String value) {
            addCriterion("PROPOSED_DATETIME <", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeLessThanOrEqualTo(String value) {
            addCriterion("PROPOSED_DATETIME <=", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeLike(String value) {
            addCriterion("PROPOSED_DATETIME like", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeNotLike(String value) {
            addCriterion("PROPOSED_DATETIME not like", value, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeIn(List<String> values) {
            addCriterion("PROPOSED_DATETIME in", values, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeNotIn(List<String> values) {
            addCriterion("PROPOSED_DATETIME not in", values, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeBetween(String value1, String value2) {
            addCriterion("PROPOSED_DATETIME between", value1, value2, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andProposedDatetimeNotBetween(String value1, String value2) {
            addCriterion("PROPOSED_DATETIME not between", value1, value2, "proposedDatetime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNull() {
            addCriterion("UPDATE_USER is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNotNull() {
            addCriterion("UPDATE_USER is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualTo(String value) {
            addCriterion("UPDATE_USER =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualTo(String value) {
            addCriterion("UPDATE_USER <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThan(String value) {
            addCriterion("UPDATE_USER >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualTo(String value) {
            addCriterion("UPDATE_USER >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThan(String value) {
            addCriterion("UPDATE_USER <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualTo(String value) {
            addCriterion("UPDATE_USER <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLike(String value) {
            addCriterion("UPDATE_USER like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLike(String value) {
            addCriterion("UPDATE_USER not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIn(List<String> values) {
            addCriterion("UPDATE_USER in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotIn(List<String> values) {
            addCriterion("UPDATE_USER not in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserBetween(String value1, String value2) {
            addCriterion("UPDATE_USER between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotBetween(String value1, String value2) {
            addCriterion("UPDATE_USER not between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampIsNull() {
            addCriterion("UPDATE_TSTAMP is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampIsNotNull() {
            addCriterion("UPDATE_TSTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_TSTAMP =", value, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampNotEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_TSTAMP <>", value, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampGreaterThan(LocalDateTime value) {
            addCriterion("UPDATE_TSTAMP >", value, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_TSTAMP >=", value, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampLessThan(LocalDateTime value) {
            addCriterion("UPDATE_TSTAMP <", value, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_TSTAMP <=", value, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampIn(List<LocalDateTime> values) {
            addCriterion("UPDATE_TSTAMP in", values, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampNotIn(List<LocalDateTime> values) {
            addCriterion("UPDATE_TSTAMP not in", values, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("UPDATE_TSTAMP between", value1, value2, "updateTstamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTstampNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("UPDATE_TSTAMP not between", value1, value2, "updateTstamp");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated do_not_delete_during_merge Tue Feb 21 23:49:25 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.T_PROPOSED_DATETIME
     *
     * @mbg.generated Tue Feb 21 23:49:25 JST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}